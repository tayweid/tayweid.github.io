---
format:
  revealjs:
    css: custom.css
    transition: none
    aspect-ratio: "16:9"
---

## ECON 0150 | Economic Data Analysis {.center}
<p class="subheader-center">The economist's data analysis skillset.</p>

<br> 

### *Part 3.1 | Populations and Random Variables*

---

## From Data to Understanding
<p class="subheader">We've spent Part 1 & 2 understanding our data... but what comes next?</p>

<br>

:::{.incremental}
- We've mastered **visualizing** data
- We've developed skills to **summarize** and **transform** data
- But sometimes we need something more **precise** and **quantifiable**
- And sometimes we want to say something about the **population**, not just our **sample**
:::

---

## Two Groups, One Question
<p class="subheader">Which group sleeps longer?</p>

```{python}
#| echo: false
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Set random seed for reproducibility
np.random.seed(42)

# Generate sleep data for two groups
group_A = np.random.normal(7.2, 1.5, 50)  # Higher mean, higher variance
group_B = np.random.normal(6.8, 0.8, 50)  # Lower mean, lower variance

# Create dataframe
sleep_data = pd.DataFrame({
    'Hours': np.concatenate([group_A, group_B]),
    'Group': ['Group A']*50 + ['Group B']*50
})

# Create figure
fig, ax = plt.subplots(figsize=(10, 5))

# Boxplot + stripplot
sns.boxplot(data=sleep_data, y='Group', x='Hours', ax=ax, width=0.3, color='white', whis=(0, 100))
sns.stripplot(data=sleep_data, y='Group', x='Hours', ax=ax, size=6, hue='Group')

ax.set_ylabel('')
ax.set_title('Sleep Patterns')
ax.grid(True, alpha=0.2, axis='y')
sns.despine(trim=True, offset=True)
plt.tight_layout()
plt.show()
```

. . .

*> the distributions overlap... how can we compare them precisely?*

---

## Measures of Location
<p class="subheader">Where is the "center" of each group?</p>

<br>

**Mean**: The average value
$$\bar{x} = \frac{x_1 + x_2 + ... x_N}{N}$$

---

## Measures of Location
<p class="subheader">Where is the "center" of each group?</p>

<br>

**Mean**: The average value
$$\bar{x} = \frac{1}{n}\sum_{i=1}^{n} x_i$$

. . .

```{python}
#| echo: true
# Calculate means
mean_A = group_A.mean()
mean_B = group_B.mean()
```

. . .

```{python}
print(f"Group A mean: {mean_A:.2f} hours")
print(f"Group B mean: {mean_B:.2f} hours")
```

. . .

*> group A sleeps longer **on average***

. . .

*> but notice the spread!*

---

## Measures of Dispersion
<p class="subheader"> How spread out is the data?</p>

<br>

**Range**: difference between the largest and smallest value in the data

. . .

- Simple but doesn't respond to changes near the middle of the distribution 


---

## Measures of Dispersion
<p class="subheader"> How spread out is the data?</p>

<br>

**Mean Deviation**: difference between each value and the average

$$ \sum \frac{x_i - \bar{x}}{n}$$

. . .

- Simple but the average of the difference is zero...

---

## Measures of Dispersion
<p class="subheader"> How spread out is the data?</p>

<br>

**Mean Absolute Deviation**: absolute value of the difference from the average

$$ \sum \frac{|x_i - \bar{x}|}{n}$$

. . .

- The mean isn't zero
- A little more complex and isn't so nice mathematically

---

## Measures of Dispersion
<p class="subheader"> How spread out is the data?</p>

<br>

**Variance**: average squared difference from the mean

$$ Var_X = \sum \frac{(x_i - \bar{x})^2}{n}$$

. . .

- Treats negatives appropriately
- The mean isn't zero
- Mathematically nice
- Units are uninformative

---

## Measures of Dispersion
<p class="subheader">How spread out is the data?</p>

<br>

**Standard Deviation**: A measure of spread
$$S_X = \sqrt{\sum \frac{(x_i - \bar{x})^2}{n}}$$

. . .

- Treats negatives appropriately
- The mean isn't zero
- Mathematically nice
- Units are roughly average deviation from the mean

---

## Measures of Dispersion
<p class="subheader">How spread out is the data?</p>

<br>

**Standard Deviation**: A measure of spread
$$S_X = \sqrt{\sum \frac{(x_i - \bar{x})^2}{n}}$$

```{python}
#| echo: true
# Calculate standard deviations
std_A = group_A.std()
std_B = group_B.std()
```

. . .

```{python}
print(f"Group A std dev: {std_A:.2f} hours")
print(f"Group B std dev: {std_B:.2f} hours")
```

. . .

*> Group A has **more variability** - some sleep much less, some much more*

---

## Sample vs Population
<p class="subheader">What if I told you these groups are from different counties?</p>

```{python}
#| echo: false
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Set random seed for reproducibility
np.random.seed(42)

# Generate sleep data for two groups
group_A = np.random.normal(7.2, 1.5, 50)  # Higher mean, higher variance
group_B = np.random.normal(6.8, 0.8, 50)  # Lower mean, lower variance

# Create dataframe
sleep_data = pd.DataFrame({
    'Hours': np.concatenate([group_A, group_B]),
    'Group': ['Group A']*50 + ['Group B']*50
})

# Create figure
fig, ax = plt.subplots(figsize=(10, 5))

# Boxplot + stripplot
sns.boxplot(data=sleep_data, y='Group', x='Hours', ax=ax, width=0.3, color='white', whis=(0, 100))
sns.stripplot(data=sleep_data, y='Group', x='Hours', ax=ax, size=6, hue='Group')

ax.set_ylabel('')
ax.set_title('Sleep Patterns')
ax.grid(True, alpha=0.2, axis='y')
sns.despine(trim=True, offset=True)
plt.tight_layout()
plt.show()
```

. . .

Old question: "Which **group** sleeps longer?" *(about the **data**)*

. . .

New question: "Which **county** sleeps longer?" *(about the **population**)*

---

## Sample vs Population
<p class="subheader">The data is a sample drawn from a population.</p>

![](i/sample.png){fig-align="center"}

---

## Sample vs Population
<p class="subheader">What's the difference between our data and the population?</p>

<br>

:::{.incremental}
- **The Data**: 50 individuals we happened to sample from each county
- **The Population**: All people who could live in these counties
    - Even if we surveyed everyone today, tomorrow would bring new residents
    - The **population** is a theoretical concept - an infinite pool of possibilities
:::

. . .

<br>

*> we observe **samples** but want to understand **populations***

---

## Data is a Sample
<p class="subheader">A random variable generates our data.</p>

**Random Variable**: A function that assigns numbers to random outcomes

. . .

```{python}
#| echo: false
# Visualize the true distributions
fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12, 4))

# Left: The theoretical distributions
x = np.linspace(2, 12, 100)
y_A = (1/np.sqrt(2*np.pi*1.5**2)) * np.exp(-(x-7.2)**2/(2*1.5**2))
y_B = (1/np.sqrt(2*np.pi*0.8**2)) * np.exp(-(x-6.8)**2/(2*0.8**2))

ax1.plot(x, y_A, label='County A: μ=7.2, σ=1.5', color='blue', linewidth=2)
ax1.plot(x, y_B, label='County B: μ=6.8, σ=0.8', color='orange', linewidth=2)
ax1.fill_between(x, y_A, alpha=0.3, color='blue')
ax1.fill_between(x, y_B, alpha=0.3, color='orange')
ax1.set_xlabel('Hours of Sleep')
ax1.set_ylabel('Probability Density')
ax1.set_title('True Population Distributions')
ax1.legend()
ax1.grid(True, alpha=0.2)

# Right: Our samples
ax2.hist(group_A, alpha=0.5, label='County A Sample', bins=15, density=True, color='blue')
ax2.hist(group_B, alpha=0.5, label='County B Sample', bins=15, density=True, color='orange')
ax2.set_xlabel('Hours of Sleep')
ax2.set_ylabel('Density')
ax2.set_title('Our Sample Data')
ax2.legend()
ax2.grid(True, alpha=0.2)

plt.tight_layout()
plt.show()
```

. . .

*> data is a **sample** drawn from these a **random variable***

---

## Known Distribution
<p class="subheader">What questions can we answer?</p>

If we know County A:

$$x_i \sim N(μ=7.2, σ=1.5)$$

. . .

- What proportion of the population sleeps less than 5 hours?

. . .

- What proportion of the population sleeps more than 9 hours?

. . .

- How much sleep does the middle 95% of the population get?

. . .

<br> 

*> with known distributions, we can answer **any** probability question!*

---

## Random Variables Come in Many Shapes
<p class="subheader">Which distribution fits your data?</p>

![](i/distributions.png){fig-align="center"}

---

## But What If We Don't Know the Distribution?
<p class="subheader">How do we move from sample to population?</p>

**What we observe:**

- Sample size: $n = 50$
- Sample mean: $\bar{x} = 7.24$ hours
- Sample standard deviation: $s = 1.48$ hours

. . .

**What we want to know:**

- Population mean: $\mu = ?$
- Population standard deviation: $\sigma = ?$
- Population distribution: $f(x) = ?$

. . .

*> the sample statistics are **not** the same as population parameters!*

*> $\bar{x} \neq \mu$, and $s \neq \sigma$*

---

## The Central Question
<p class="subheader">Can we say anything about the population when we only have a sample?</p>


<br>

:::{.incremental}
- The **Central Limit Theorem** - our bridge to inference
- **Confidence intervals** - quantifying uncertainty
- **Hypothesis testing** - making decisions with data
- Moving from description to **inference**
:::

. . .

<br>

*> without seeing the population we can still answer questions about the population!*