## Population vs Sample
<p class="subheader">Question: How close are x̄ and s to μ and σ?</p>

:::: {.columns}
::: {.column width="40%"}
Instead of $\mu$ and $\sigma$, we know:

- A sample of observations
- Sample statistics (x̄, s)
:::

::: {.column width="60%"}
```{python}
#| echo: false
import numpy as np
import matplotlib.pyplot as plt
from scipy import stats
import seaborn as sns

# True distribution
x = np.linspace(4, 20, 1000)
y_true = stats.norm.pdf(x, 12, 2.5)

# Generate a sample
np.random.seed(42)
sample = np.random.normal(12, 2.5, 30)
sample_mean = np.mean(sample)
sample_std = np.std(sample, ddof=1)

plt.figure(figsize=(7, 3))

# Update Matplotlib parameters
plt.rcParams.update({
    'font.family': 'serif',              # Set the font family
    'font.serif': ['Times New Roman'],   # Use a specific serif font
    'font.style': 'italic',              # Set the font style to italic
})

plt.plot(x, y_true, 'b-', alpha=0.3, label='True Distribution')
plt.hist(sample, bins=10, density=True, alpha=0.5, color='green',
         label='Sample')
plt.axvline(x=12, color='blue', linestyle='--', 
            label=f'μ = 12')
plt.axvline(x=sample_mean, color='red', linestyle='--',
            label=f'x̄ = {sample_mean:.1f}')
plt.legend(loc='upper right', fontsize=14)
plt.yticks([])
plt.xlabel('Minutes', fontsize=16)

sns.despine(left=True, bottom=False, right=True, top=True, offset=0, trim=True)
plt.tight_layout()
plt.show()
```
:::
::::

<br>

. . .

*> we want to systematically measure the "closeness" of the sample/population*

. . .

*> lets do a simpler example using die rolls*