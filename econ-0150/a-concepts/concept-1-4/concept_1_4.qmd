---
format:
  revealjs:
    css: custom.css
    transition: none
---

## ECON 0150 | Economic Data Analysis {.center}
<p class="subheader-center">The economist's data analysis pipeline.</p>

<br> 

### Part 1.4 | Numerical Variables by Category

---

## Hiring a Barista
<p class="subheader">Use Coffee_Sales_Receips.csv to help inform where to hire a barista.</p>

<br>


- You manage three coffee shops and are considering where to hire a new barista.
- You have a dataset containing information about the transactions taking place at all three coffee shops throughout the day.
- Lets consider how to use this data to inform our decision.

---

## Hiring a Barista
<p class="subheader">Q. Which coffee shop is the busiest?</p>

---

## Hiring a Barista: Bar Graphs Compare Shops
<p class="subheader">Q. Which coffee shop is the busiest?</p>

![](i/i_01.png)

. . .

*> a bar chart makes it easy to compare shops' busyness*

---

## Hiring a Barista
<p class="subheader">Q. What time of day is the busiest?</p>

---

## Hiring a Barista: Histograms Can Compare Times
<p class="subheader">Q. What time of day is the busiest?</p>

![](i/i_02.png)

. . .

*> a histogram makes it easy to compare transactions by time of day*

. . .

*> does this mean the morning shift at Shop A is the busiest?*

---

## Hiring a Barista
<p class="subheader">Q. Which shift is the busiest?</p>

---

## Hiring a Barista: Transactions by Shop
<p class="subheader">Q. Which shift is the busiest?</p>

![](i/i_03.png)

*> an overlaid histogram can show all three groups*

. . .

*> does this show the data clearly?*

---

## Hiring a Barista: Transactions by Shop
<p class="subheader">Q. Which shift is the busiest?</p>

![](i/i_04.png)

*> instead, lets use a line graph*

---

## Part 1.4 | Numerical Variables by Category

<br><br>

#### Summary

::: {.incremental}
- Categorical variables and continuous variables can give us different views of the same data.
- We can visualize both views one the same graph.
- Line graphs help simplify the visualization of multiple categories.
:::

---

## Exercise 1.4 | Coffee Shop Transactions
<p class="subheader">Use Coffee_Sales_Receips.csv to help inform where to hire a barista.</p>

. . .

```{.python code-line-numbers="1-3"}
# Load Dataset
sales = pd.read_csv(file_path + 'Coffee_Sales_Reciepts.csv')
sales.head()
```

. . .

```{python}
import pandas as pd
sales = pd.read_csv('data/Coffee_Sales_Reciepts.csv')
sales[['Hours', 'Shop']].head()
```

*> you'll see a few more columns in your dataset*

---

## Exercise 1.4 | Bar Chart
<p class="subheader">Use Coffee_Sales_Receips.csv to help inform where to hire a barista.</p>

```{.python code-line-numbers="1-2"}
# Bar graph
sns.countplot(data=sales, x='Shop', hue='Shop')
```

. . .

![](i/i_01.png)

---

## Exercise 1.4 | Histogram
<p class="subheader">Use Coffee_Sales_Receips.csv to help inform where to hire a barista.</p>

```{.python code-line-numbers="1-2"}
# Create a histogram
sns.histplot(data=sales, x='Hours', bins=range(0,24,1))
```

. . .

![](i/i_02.png)

---

## Exercise 1.4 | Multiple Line Graph
<p class="subheader">Q. Which shift is the busiest?</p>

```{.python code-line-numbers="1-2"}
# Create hourly counts by shop
hourly_counts = sales.groupby(['Shop', 'Hours']).size().reset_index(name='Count')

# Figure
sns.lineplot(data=hourly_counts, x='Hours', y='Count', hue='Shop)
```

. . .

```{python}
import pandas as pd
sales = pd.read_csv('data/Coffee_Sales_Reciepts.csv')
sales.groupby(['Shop', 'Hours']).size().reset_index(name='Count').head()
```

---

## Exercise 1.4 | Multiple Line Graph
<p class="subheader">Q. Which shift is the busiest?</p>

```{.python code-line-numbers="4-5"}
# Create hourly counts by shop
hourly_counts = sales.groupby(['Shop', 'Hours']).size().reset_index(name='Count')

# Figure
sns.lineplot(data=hourly_counts, x='Hours', y='Count', hue='Shop)
```

. . .

![](i/i_04.png)


